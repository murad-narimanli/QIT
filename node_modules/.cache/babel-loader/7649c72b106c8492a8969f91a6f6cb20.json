{"ast":null,"code":"import { ADD_COUNTRY_TO_CART, REMOVE_COUNTRY_FROM_CART } from '../../types'; //initial state\n\nconst cartFromLocal = localStorage.getItem('cart');\nlet initialCart = [];\n\nif (cartFromLocal) {\n  initialCart = JSON.parse(cartFromLocal);\n}\n\nconst initState = {\n  cart: initialCart\n}; //cart reducer function \n\nexport default function cartReducer(state = initState, action) {\n  switch (action.type) {\n    //adding country to cart\n    case ADD_COUNTRY_TO_CART:\n      {\n        const country = action.payload; //save cart country to localstorage\n\n        const cartCountry = [...state.cart, country];\n        localStorage.setItem('cart', JSON.stringify(cartCountry));\n        return { ...state,\n          cart: [...state.cart, country]\n        };\n      }\n\n    case REMOVE_COUNTRY_FROM_CART:\n      {\n        const paylodCountry = action.payload;\n        const tempCart = state.cart.filter(country => country !== paylodCountry); //save cart country to localstorage\n\n        const cartCountry = [...tempCart];\n        localStorage.setItem('cart', JSON.stringify(cartCountry));\n        return { ...state,\n          cart: [...tempCart]\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/Projects/QITTask/src/redux/reducers/CartReducer.ts"],"names":["ADD_COUNTRY_TO_CART","REMOVE_COUNTRY_FROM_CART","cartFromLocal","localStorage","getItem","initialCart","JSON","parse","initState","cart","cartReducer","state","action","type","country","payload","cartCountry","setItem","stringify","paylodCountry","tempCart","filter"],"mappings":"AACA,SAAQA,mBAAR,EAA6BC,wBAA7B,QAA2F,aAA3F,C,CACA;;AAEA,MAAMC,aAAa,GAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB;AACA,IAAIC,WAAc,GAAC,EAAnB;;AACA,IAAGH,aAAH,EAAiB;AACbG,EAAAA,WAAW,GAACC,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAZ;AACH;;AACD,MAAMM,SAA0B,GAAC;AAC7BC,EAAAA,IAAI,EAACJ;AADwB,CAAjC,C,CAIA;;AAEA,eAAe,SAASK,WAAT,CAAqBC,KAAsB,GAACH,SAA5C,EAAuDI,MAAvD,EAA2F;AAEtG,UAAOA,MAAM,CAACC,IAAd;AAEI;AAEA,SAAKb,mBAAL;AAAyB;AACrB,cAAMc,OAAO,GAACF,MAAM,CAACG,OAArB,CADqB,CAErB;;AACA,cAAMC,WAAW,GAAE,CAAC,GAAGL,KAAK,CAACF,IAAV,EAAgBK,OAAhB,CAAnB;AACAX,QAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA4BX,IAAI,CAACY,SAAL,CAAeF,WAAf,CAA5B;AACA,eAAO,EACH,GAAGL,KADA;AAEHF,UAAAA,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBK,OAAhB;AAFF,SAAP;AAIH;;AACD,SAAKb,wBAAL;AAA8B;AAC1B,cAAMkB,aAAa,GAACP,MAAM,CAACG,OAA3B;AACA,cAAMK,QAAQ,GAACT,KAAK,CAACF,IAAN,CAAWY,MAAX,CAAkBP,OAAO,IAAEA,OAAO,KAAGK,aAArC,CAAf,CAF0B,CAG1B;;AACA,cAAMH,WAAW,GAAE,CAAC,GAAGI,QAAJ,CAAnB;AACAjB,QAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA4BX,IAAI,CAACY,SAAL,CAAeF,WAAf,CAA5B;AACA,eAAO,EACH,GAAGL,KADA;AAEHF,UAAAA,IAAI,EAAC,CAAC,GAAGW,QAAJ;AAFF,SAAP;AAKH;;AACD;AACI,aAAOT,KAAP;AA3BR;AA8BH","sourcesContent":["\nimport {ADD_COUNTRY_TO_CART, REMOVE_COUNTRY_FROM_CART, CartActions, CartReducerState} from '../../types'\n//initial state\n\nconst cartFromLocal= localStorage.getItem('cart')\nlet initialCart:[]=[]\nif(cartFromLocal){\n    initialCart=JSON.parse(cartFromLocal)\n}\nconst initState:CartReducerState={\n    cart:initialCart\n}\n\n//cart reducer function \n\nexport default function cartReducer(state:CartReducerState=initState, action:CartActions):CartReducerState{\n\n    switch(action.type){\n\n        //adding country to cart\n\n        case ADD_COUNTRY_TO_CART:{\n            const country=action.payload  \n            //save cart country to localstorage\n            const cartCountry= [...state.cart, country]\n            localStorage.setItem('cart',JSON.stringify(cartCountry))           \n            return {\n                ...state, \n                cart:[...state.cart, country]\n            }\n        }\n        case REMOVE_COUNTRY_FROM_CART:{\n            const paylodCountry=action.payload\n            const tempCart=state.cart.filter(country=>country!==paylodCountry)\n            //save cart country to localstorage\n            const cartCountry= [...tempCart]\n            localStorage.setItem('cart',JSON.stringify(cartCountry))  \n            return {\n                ...state, \n                cart:[...tempCart]\n            }\n\n        }\n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/muradnerimanli/Desktop/Projects/QITTask/src/components/CountryList/CountryList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles, useTheme, createStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Search from \"../Search/Search\";\nimport _ from 'lodash';\nimport { fetchAllCountries } from '../../redux/actions';\nimport CountryCard from '../CountryCard/CountryCard';\nimport './countrylist.scss'; //table pagination action component \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles1 = makeStyles(theme => createStyles({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n} // Country list with pagination and sorting \n\n\n_s(TablePaginationActions, \"KqsuGf3FnFNq6eN80CYbjOwL8vo=\", false, function () {\n  return [useStyles1, useTheme];\n});\n\n_c = TablePaginationActions;\n\nconst CountryList = () => {\n  _s2();\n\n  //get all countries from redux state\n  const countries = useSelector(state => state.countryReducer.countries);\n  const isLoading = useSelector(state => state.countryReducer.isLoading); //cart state\n  // for filtered countries\n\n  const [filteredCountries, setFilteredCountries] = React.useState(countries);\n  const [asc, setAsc] = React.useState(false); //for paginated\n\n  const [paginatedCountries, setPaginatedCountries] = React.useState(countries);\n  React.useEffect(() => {\n    setFilteredCountries(countries);\n  }, [countries]); //filter country by keyword\n\n  const searchKeyword = useSelector(state => state.uiReducer.searchKeyWord);\n  React.useEffect(() => {\n    const _tempCountries = countries.filter(country => country.name.toLowerCase().includes(searchKeyword === null || searchKeyword === void 0 ? void 0 : searchKeyword.toLowerCase()));\n\n    setFilteredCountries(_tempCountries);\n  }, [searchKeyword, countries]); //Sorting related\n\n  const [sortBy, setSortBy] = React.useState('name');\n  React.useEffect(() => {\n    //\n    const tempSorted = _.orderBy(filteredCountries, [sortBy], [asc ? \"asc\" : \"desc\"]);\n\n    setPaginatedCountries(tempSorted);\n  }, [sortBy, filteredCountries, asc]); //handle sort\n\n  const handleSort = event => {\n    //set sort type\n    setSortBy(event.target.value);\n  }; //initialize dispatch\n\n\n  const dispatch = useDispatch(); //dispatch fetchAllCountries when page loads\n\n  React.useEffect(() => {\n    dispatch(fetchAllCountries());\n  }, [dispatch]); //pagination related\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); //const emptyRows = rowsPerPage - Math.min(rowsPerPage, filteredCountries.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; //updating data according to pagination\n\n\n  React.useEffect(() => {\n    const paginedC = filteredCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n    setPaginatedCountries(paginedC);\n  }, [page, rowsPerPage, filteredCountries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-list__topList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-list__search\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-list__sort\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sort by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"sort-country-select-label\",\n          id: \"sort-country-select\",\n          onChange: handleSort,\n          disableUnderline: true,\n          defaultValue: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"region\",\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"population\",\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-list__cards\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          width: '100%',\n          margin: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), !isLoading && paginatedCountries && paginatedCountries.map(country => /*#__PURE__*/_jsxDEV(CountryCard, { ...country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-list__pagination\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25, {\n          label: 'All',\n          value: -1\n        }],\n        colSpan: 3,\n        count: filteredCountries.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage,\n        ActionsComponent: TablePaginationActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(CountryList, \"Mbggg4p0cOad8xs+qNDYMEtWw5o=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c2 = CountryList;\nexport default CountryList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CountryList\");","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/Projects/QITTask/src/components/CountryList/CountryList.tsx"],"names":["React","useDispatch","useSelector","MenuItem","makeStyles","useTheme","createStyles","Select","TablePagination","IconButton","CircularProgress","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Search","_","fetchAllCountries","CountryCard","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","CountryList","countries","state","countryReducer","isLoading","filteredCountries","setFilteredCountries","useState","asc","setAsc","paginatedCountries","setPaginatedCountries","useEffect","searchKeyword","uiReducer","searchKeyWord","_tempCountries","filter","country","name","toLowerCase","includes","sortBy","setSortBy","tempSorted","orderBy","handleSort","target","value","dispatch","setPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","paginedC","slice","display","justifyContent","width","margin","map","label","length","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useDispatch, useSelector } from 'react-redux'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\nimport Select from '@material-ui/core/Select'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport IconButton from '@material-ui/core/IconButton'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport Search from \"../Search/Search\";\nimport _ from 'lodash'\n\n\n\nimport {fetchAllCountries} from '../../redux/actions'\n\nimport {AppState} from '../../types'\n\nimport CountryCard from '../CountryCard/CountryCard'\n\nimport './countrylist.scss'\n\n\n\n//table pagination action component \n\n\nconst useStyles1 = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }),\n);\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\n// Country list with pagination and sorting \nconst CountryList=()=> {\n\n    //get all countries from redux state\n    const countries= useSelector((state:AppState)=>state.countryReducer.countries)\n    const isLoading= useSelector((state:AppState)=>state.countryReducer.isLoading)\n    //cart state\n\n    // for filtered countries\n    const [filteredCountries, setFilteredCountries]=React.useState(countries)\n    const [asc , setAsc]=React.useState(false)\n    //for paginated\n    const [paginatedCountries, setPaginatedCountries]=React.useState(countries)\n\n    React.useEffect(()=>{\n        setFilteredCountries(countries)\n    },[countries])\n\n\n    //filter country by keyword\n    const searchKeyword=useSelector((state:AppState)=>state.uiReducer.searchKeyWord)\n    React.useEffect(()=>{\n        \n        const _tempCountries:[]=countries.filter((country)=>country.name.toLowerCase().includes(searchKeyword?.toLowerCase()))as []\n        setFilteredCountries(_tempCountries)\n    },[searchKeyword, countries])\n\n   \n    //Sorting related\n    const [sortBy, setSortBy]=React.useState('name')\n\n\n    React.useEffect(()=>{\n        //\n        const tempSorted=_.orderBy(filteredCountries, [sortBy], [asc ? \"asc\" : \"desc\"])  as []\n        setPaginatedCountries(tempSorted)       \n    },[sortBy, filteredCountries , asc])\n\n   \n    //handle sort\n    const handleSort=(event:any)=>{        \n        //set sort type\n        setSortBy(event.target.value) \n        \n     }\n    \n   \n    \n\n     //initialize dispatch\n     const dispatch=useDispatch()\n\n\n     //dispatch fetchAllCountries when page loads\n     React.useEffect(()=>{\n         dispatch(fetchAllCountries())\n     },[dispatch])\n \n\n     //pagination related\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    //const emptyRows = rowsPerPage - Math.min(rowsPerPage, filteredCountries.length - page * rowsPerPage);\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    ) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    }\n    //updating data according to pagination\n    React.useEffect(()=>{\n       const paginedC=filteredCountries.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage) as []\n       setPaginatedCountries(paginedC)\n    },[page, rowsPerPage, filteredCountries])\n\n    return (\n        <div className=\"country-list\">\n            {/*search*/}\n            <div className=\"country-list__topList\">\n                <div className=\"country-list__search\">\n                    <Search/>\n                </div>\n                {/* sorting  */}\n                <div className=\"country-list__sort\">\n                    <p>Sort by</p>\n                    <Select\n                        labelId=\"sort-country-select-label\"\n                        id=\"sort-country-select\"\n                        onChange={handleSort}\n                        disableUnderline={true}\n                        defaultValue=\"name\"\n                    >\n                        <MenuItem value=\"name\">Name</MenuItem>\n                        <MenuItem value=\"region\">Region</MenuItem>\n                        <MenuItem value=\"population\">Population</MenuItem>\n                    </Select>\n                </div>\n            </div>\n\n            {/* country lists */}\n            <div className=\"country-list__cards\">\n                {isLoading &&\n                    <div style={{display:'flex' , justifyContent:'center' , width:'100%' , margin:'50px'}}>\n                        <CircularProgress color=\"primary\" />\n                    </div>\n                }\n\n                {!isLoading && paginatedCountries && \n                    paginatedCountries.map((country)=>(\n                        <CountryCard key={country.name} {...country}   />\n                    ))\n                }\n            </div>\n\n            {/* pagination */}\n            {\n                !isLoading &&\n                <div className=\"country-list__pagination\">\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                        colSpan={3}\n                        count={filteredCountries.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        SelectProps={{\n                            inputProps: { 'aria-label': 'rows per page' },\n                            native: true,\n                        }}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                    />\n                </div>\n            }\n\n         \n\n        </div>\n    )\n}\n\nexport default CountryList\n"]},"metadata":{},"sourceType":"module"}
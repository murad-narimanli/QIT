{"ast":null,"code":"//reducer case constants\nexport const FETCH_COUNTRIES_LOADING = \"FETCH_COUNTRIES_LOADING\";\nexport const FETCH_COUNTRIES_SUCCESS = \"FETCH_COUNTRIES_SUCCESS\";\nexport const FETCH_COUNTRIES_FAILURE = \"FETCH_COUNTRIES_FAILURE\"; //types","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/Projects/QITTask/src/types/CountryTypes.ts"],"names":["FETCH_COUNTRIES_LOADING","FETCH_COUNTRIES_SUCCESS","FETCH_COUNTRIES_FAILURE"],"mappings":"AAAA;AACA,OAAO,MAAMA,uBAAuB,GAAC,yBAA9B;AACP,OAAO,MAAMC,uBAAuB,GAAC,yBAA9B;AACP,OAAO,MAAMC,uBAAuB,GAAC,yBAA9B,C,CAEP","sourcesContent":["//reducer case constants\nexport const FETCH_COUNTRIES_LOADING=\"FETCH_COUNTRIES_LOADING\"\nexport const FETCH_COUNTRIES_SUCCESS=\"FETCH_COUNTRIES_SUCCESS\"\nexport const FETCH_COUNTRIES_FAILURE=\"FETCH_COUNTRIES_FAILURE\"\n\n//types \nexport type CountryReducerState={\n    countries:CountryState[],\n    isLoading:boolean, \n    error:string\n}\n\nexport type CountryState={\n    name:string \n    region:string \n    subregion:string\n    population:number \n    nativeName:string\n    flag:string\n    capital:string\n    languages:[{name:string}]\n\n}\n\n//action types\nexport type FetchAllCountriesLoadingAction={\n    type: typeof FETCH_COUNTRIES_LOADING\n    payload?: string\n}\nexport type FetchAllCountriesSuccessAction={\n    type: typeof FETCH_COUNTRIES_SUCCESS\n    payload: []\n}\nexport type FetchAllCountriesFailureAction={\n    type: typeof FETCH_COUNTRIES_FAILURE\n    payload: string\n}\n\nexport type CountryActions= FetchAllCountriesLoadingAction | FetchAllCountriesSuccessAction | FetchAllCountriesFailureAction\n"]},"metadata":{},"sourceType":"module"}
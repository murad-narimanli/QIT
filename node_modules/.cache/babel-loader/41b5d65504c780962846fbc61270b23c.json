{"ast":null,"code":"var _jsxFileName = \"/Users/muradnerimanli/Desktop/Projects/QITTask/src/pages/Country/Country.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { fetchAllCountries } from '../../redux/actions';\nimport './country.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Country = () => {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countryReducer.countries); //cart state\n\n  const [currentCountry, setCurrentCountry] = React.useState(countries.filter(country => country.name === name)[0]); //dispatch fetchAllCountries when page loads\n\n  React.useEffect(() => {\n    dispatch(fetchAllCountries());\n  }, [dispatch]); //update currentCountry when we have countries data\n\n  React.useEffect(() => {\n    setCurrentCountry(countries.filter(country => country.name === name)[0]);\n  }, [countries, name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-page__go-back\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push('/'),\n        className: \"btn btn__text\",\n        size: \"small\",\n        variant: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this), \"Go back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), currentCountry && currentCountry.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-page__details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-page__details-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentCountry.flag,\n          alt: currentCountry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"country-card__name\",\n          children: currentCountry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-page__details-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-page__details-right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Population: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"right\",\n            children: currentCountry.population.toLocaleString('en')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-page__details-right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Region: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"right\",\n            children: currentCountry.region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-page__details-right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sub-region: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"right\",\n            children: currentCountry.subregion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-page__details-right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Native name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"right\",\n            children: currentCountry.nativeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-page__details-right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Capital city: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"right\",\n            children: currentCountry.capital\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-page__details-right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Languages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), currentCountry.languages.map(language => /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"right\",\n            children: language.name\n          }, language.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Country, \"NN9aWSwv0cSyacqLyegCey4Jtco=\", false, function () {\n  return [useParams, useHistory, useDispatch, useSelector];\n});\n\n_c = Country;\nexport default Country;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/Projects/QITTask/src/pages/Country/Country.tsx"],"names":["React","useDispatch","useSelector","useParams","useHistory","Button","ArrowBackIosIcon","fetchAllCountries","Country","name","history","dispatch","countries","state","countryReducer","currentCountry","setCurrentCountry","useState","filter","country","useEffect","push","flag","population","toLocaleString","region","subregion","nativeName","capital","languages","map","language"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useParams, useHistory} from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\n\nimport {fetchAllCountries} from '../../redux/actions'\nimport {AppState} from '../../types'\n\nimport './country.scss'\n\nconst Country=()=> {\n\n    const {name}=useParams() as any\n    const history=useHistory()\n\n    const dispatch=useDispatch()\n\n    \n    const countries= useSelector((state:AppState)=>state.countryReducer.countries)\n    //cart state\n\n    const [currentCountry, setCurrentCountry]=React.useState(countries.filter(country=>country.name===name)[0])\n     //dispatch fetchAllCountries when page loads\n     React.useEffect(()=>{\n        dispatch(fetchAllCountries())\n    },[dispatch])\n\n    //update currentCountry when we have countries data\n\n    React.useEffect(()=>{\n        setCurrentCountry(countries.filter(country=>country.name===name)[0])\n    },[countries, name])\n\n\n    return (\n        <div className=\"country-page\">\n\n          <div className=\"country-page__go-back\">\n             <Button onClick={()=>history.push('/')} className=\"btn btn__text\" size=\"small\" variant=\"text\"> \n                 <ArrowBackIosIcon/>\n                 Go back\n             </Button>\n          </div>\n          {\n              currentCountry && currentCountry.name && \n                <div className=\"country-page__details\">\n                    <div className=\"country-page__details-left\">\n                        <img src={currentCountry.flag} alt={currentCountry.name} />\n                        <h2 className=\"country-card__name\">{currentCountry.name}</h2>\n\n                    </div>\n                    <div className=\"country-page__details-right\">\n                        <div className=\"country-page__details-right-list\">\n                            <h2>Population: </h2>\n                            <h2 className=\"right\">{currentCountry.population.toLocaleString('en')}</h2>\n                        </div>\n                        <div className=\"country-page__details-right-list\">\n                            <h2>Region: </h2>\n                            <h2 className=\"right\">{currentCountry.region}</h2>\n                        </div>\n                        <div className=\"country-page__details-right-list\">\n                             <h2>Sub-region: </h2>\n                             <h2 className=\"right\">{currentCountry.subregion}</h2>\n                        </div>\n\n                        <div className=\"country-page__details-right-list\">\n                            <h2>Native name: </h2>\n                            <h2 className=\"right\">{currentCountry.nativeName}</h2>\n                        </div>\n\n                        <div className=\"country-page__details-right-list\">\n                            <h2>Capital city: </h2> <h2 className=\"right\">{currentCountry.capital}</h2>\n                        </div>\n\n                        <div className=\"country-page__details-right-list\">\n                                <h2>Languages:</h2>\n                            {currentCountry.languages.map(language=>(\n                                <h2 className=\"right\" key={language.name}>{language.name}</h2>\n                            ))}\n                        </div>\n\n                    </div>\n                </div>\n          }\n\n        </div>\n    )\n}\n\nexport default Country\n"]},"metadata":{},"sourceType":"module"}
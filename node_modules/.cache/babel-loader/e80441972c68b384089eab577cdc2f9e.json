{"ast":null,"code":"import { FETCH_COUNTRIES_LOADING, FETCH_COUNTRIES_FAILURE, FETCH_COUNTRIES_SUCCESS } from '../../types';\nconst initiState = {\n  countries: [],\n  isLoading: false,\n  error: ''\n};\nexport default function countryReducer(state = initiState, action) {\n  switch (action.type) {\n    // fetch country, loading true\n    case FETCH_COUNTRIES_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n    //if fetching is successful \n\n    case FETCH_COUNTRIES_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        countries: action.payload,\n        error: ''\n      };\n    //if fetching has any errors\n\n    case FETCH_COUNTRIES_FAILURE:\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/Projects/QITTask/src/redux/reducers/CountryReducer.ts"],"names":["FETCH_COUNTRIES_LOADING","FETCH_COUNTRIES_FAILURE","FETCH_COUNTRIES_SUCCESS","initiState","countries","isLoading","error","countryReducer","state","action","type","payload"],"mappings":"AAAA,SAA6BA,uBAA7B,EAAsDC,uBAAtD,EAA+EC,uBAA/E,QAA6G,aAA7G;AAEA,MAAMC,UAA8B,GAAC;AACjCC,EAAAA,SAAS,EAAC,EADuB;AAEjCC,EAAAA,SAAS,EAAC,KAFuB;AAGjCC,EAAAA,KAAK,EAAC;AAH2B,CAArC;AAMA,eAAe,SAASC,cAAT,CAAwBC,KAAyB,GAACL,UAAlD,EAA8DM,MAA9D,EAAyE;AAEpF,UAAOA,MAAM,CAACC,IAAd;AAEI;AACA,SAAKV,uBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,SAAS,EAAC;AAFP,OAAP;AAIJ;;AACA,SAAKH,uBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,SAAS,EAAC,KAFP;AAGHD,QAAAA,SAAS,EAACK,MAAM,CAACE,OAHd;AAIHL,QAAAA,KAAK,EAAC;AAJH,OAAP;AAMJ;;AACA,SAAKL,uBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,SAAS,EAAC,KAFP;AAGHC,QAAAA,KAAK,EAACG,MAAM,CAACE;AAHV,OAAP;;AAMJ;AACI,aAAOH,KAAP;AAzBR;AA+BH","sourcesContent":["import {CountryReducerState, FETCH_COUNTRIES_LOADING, FETCH_COUNTRIES_FAILURE, FETCH_COUNTRIES_SUCCESS} from '../../types'\n\nconst initiState:CountryReducerState={\n    countries:[],\n    isLoading:false, \n    error:''\n}\n\nexport default function countryReducer(state:CountryReducerState=initiState, action:any){\n\n    switch(action.type){\n\n        // fetch country, loading true\n        case FETCH_COUNTRIES_LOADING:\n            return {\n                ...state, \n                isLoading:true\n            }\n        //if fetching is successful \n        case FETCH_COUNTRIES_SUCCESS:\n            return {\n                ...state, \n                isLoading:false, \n                countries:action.payload,\n                error:'',\n            }\n        //if fetching has any errors\n        case FETCH_COUNTRIES_FAILURE:\n            return {\n                ...state,\n                isLoading:false, \n                error:action.payload\n            }\n\n        default:\n            return state\n\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}